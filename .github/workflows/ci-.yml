name: CI/CD Pipeline

on:
  # main 브랜치에 푸시되거나 풀 리퀘스트가 생성되면 워크플로우 실행
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows manual triggering of the workflow from the Actions tab
  workflow_dispatch:

jobs:
  build:
    # 사용할 런너 지정
    runs-on: ubuntu-latest

    steps:
      # GitHub 리포지토리 체크아웃
      - uses: actions/checkout@v3

      # JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'

      # gradlew 파일에 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # Gradle로 빌드 수행
      - name: Build with Gradle
        run: ./gradlew clean build

      # tar 명령어로 빌드 결과 압축
      - name: Archive build artifacts
        run: tar cvfz example.tar.gz -C build/libs .

      # AWS 자격 증명 구성
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 압축 파일을 S3 버킷에 업로드
      - name: Upload to S3
        run: aws s3 cp example.tar.gz s3://groom-runner-bucket/example/

      # CodeDeploy를 통해 배포 생성
      - name: Deploy with AWS CodeDeploy
        run: aws deploy create-deployment \
          --application-name codedeploy \
          --deployment-config-name CodeDeployDefault.OneAtATime \
          --deployment-group-name deploy-group \
          --s3-location bucket=groom-runner-bucket,bundleType=tgz,key=example/example.tar.gz